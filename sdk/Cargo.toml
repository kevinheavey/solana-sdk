[package]
name = "solana-sdk"
description = "Solana SDK"
documentation = "https://docs.rs/solana-sdk"
readme = "README.md"
version = "2.3.0"
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
edition = { workspace = true }
include = ["src/**/*", "README.md"]

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
all-features = true
rustdoc-args = ["--cfg=docsrs"]

[lib]
crate-type = ["rlib"]

[features]
default = [
    "borsh",
    "full",  # functionality that is not compatible or needed for on-chain programs
]
full = []
borsh = []
dev-context-only-utils = []

[dependencies]
borsh = { workspace = true }
bytemuck = { workspace = true }
bytemuck_derive = { workspace = true }
bv = { workspace = true, features = ["serde"] }
curve25519-dalek = { workspace = true }
five8_const = { workspace = true }
log = { workspace = true }
memoffset = { workspace = true }
num-traits = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
serde_derive = { workspace = true }
solana-sdk-macro = { workspace = true }
bincode = { workspace = true }
bitflags = { workspace = true }
bs58 = { workspace = true }
derivation-path = { workspace = true }
ed25519-dalek = { workspace = true, features = ["rand_core"] }
ed25519-dalek-bip32 = { workspace = true }
five8 = { workspace = true }
hmac = { workspace = true }
num_enum = { workspace = true }
pbkdf2 = { workspace = true }
qstring = { workspace = true }
serde-big-array = { workspace = true }
serde_bytes = { workspace = true }
sha2 = { workspace = true }
siphasher = { workspace = true }
thiserror = { workspace = true }
uriparse = { workspace = true }

[target.'cfg(not(target_os = "solana"))'.dependencies]
base64 = { workspace = true }
bincode = { workspace = true }
bitflags = { workspace = true }
blake3 = { workspace = true, features = ["traits-preview"] }
k256 = { workspace = true }
lazy_static = { workspace = true }
num-bigint = { workspace = true }
sha2 = { workspace = true }
sha3 = { workspace = true }
thiserror = { workspace = true }

[lints]
workspace = true
